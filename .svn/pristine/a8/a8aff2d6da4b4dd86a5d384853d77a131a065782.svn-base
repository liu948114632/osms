package com.itecheasy.core.system;

import com.itecheasy.common.util.BeanUtils;
import com.itecheasy.common.util.DeployProperties;
import com.itecheasy.core.po.ShopPo;
import com.itecheasy.core.user.User;
import com.itecheasy.webservice.aliexpress.AliexpressConfigInfo;
import com.itecheasy.webservice.client.EbayApiAccount;
import com.itecheasy.webservice.dms.AccountSetting;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * @author wanghw
 * @date 2015-3-23
 * @description TODO
 */
public interface SystemService extends CurrencyExchangeRateService, FBAShippingMethodService {
    /**
     * 获取所有的店铺
     *
     * @return
     */
    public List<Shop> getShops();



    public List<Shop> getEnableShops();

    List<Shop> getUsAmazonShops();

    public Shop getShop(int shopId);

    public List<Shop> getSyncAmazonStockShopList();

    public void setLastUpdateTime(int devId, Date lastUpdateTime);

    public List<Shop> getShopsByUserId(int userId);

    public List<User> getUsersByShopId(int shopId);

    public void autoAddProductType(int shopId, String ProductType);

    public void autoAddBrowesNode(int shopId, String browesNode);

    public List<String> getProductTypeByshopId(int shopId);

    public List<String> getBrowesNodeByshopId(int shopId);

    public ShopInfo getShopInfo(int shopId);

    public List<Shop> getNotPauseAndEnableShops();

    /**
     * 从配置文件中获取同步亚马逊库存的店铺
     * @return
     */
    public List<Shop> getSyncAgedShops() ;

    /**
     * 缓存店铺配置信息
     * 优化订单界面
     *
     * @param shopId
     * @return
     */
    public ShopInfo getCacheShopInfo(int shopId);

    /**
     * 缓存店铺账号信息
     * 优化订单界面
     *
     * @param shopId
     * @return
     */
    public ShopDevInfo getCacheAccount(int shopId);

    /**
     * 缓存店铺账号信息
     * 优化订单界面
     *
     * @return
     */
    public List<ShopDevInfo> getCacheShopDevInfos();

    /**
     * 缓存店铺账号信息
     * 优化订单界面
     *
     * @return
     */
    public List<Shop> getCacheShopsByDevAccount(int devId);

    public List<Integer> getCacheShopIdsByDevAccount(int devId);

    public List<Shop> getCacheShopsByType(int shopType);

    /**
     * 添加商品操作日志
     *
     * @param type
     * @param objId
     * @param remark
     * @param operator
     */
    public void addProductOperatorLog(int type, Integer objId, String remark, int operator);

    /********************************* CMS ***************************************/
    // public void getAllProperty();
    // public void getCMSCategorys(Integer parentId);
    //
    // // ph_category_series
    // public void getCMSSeries(int categoryId);
    //
    // public void getCMSPropperty();
    //
    // public void getCMSPropertyValues(int propertyId);
    //
    // public void getCMSDepartment();
    public List<Category> getAllCategory();

    public List<Category> getRootCategory();

    public Category getCategoryById(int cateId);

    public List<Category> getCategoryByParentId(int parentId);

    public List<Property> getPropertyByCategoryId(int cateId);

    public List<Property> getPropertyByCategoryIds(List<Integer> cateIds);

    public Property getPropertyById(int propertyId);

    public PropertyValue getPropertyValueById(int propertyValueId);

    public List<CategorySeries> getCategorySeriesByCategory(int categoryId);

    public List<TemplateDetial> getTemplateDetials(int templateId);

    public List<Template> getTemplates();

    /**
     * 获取所有的货运方式
     *
     * @return
     */
    public List<ShippingMethod> getAllShippingMethod();

    /**
     * 所有amazon需要的货运方式
     *
     * @return
     */
    public List<ShippingMethod> getAllShippingMethod4Amazon();

    /**
     * 所有smt需要的货运方式
     *
     * @return
     */
    public List<ShippingMethod> getAllShippingMethod4Smt();

    public ShippingMethod getShippingMethod(int id);

    /**
     * 将系统的货运方式转成amazon货运方式
     *
     * @param shippingMethod
     * @return
     */
    public AmazonShippingMethod getAmazonShippingMethod(int shippingMethod);

    /**
     * 获取所有的国家
     *
     * @return
     */
    public List<Country> getAllCountrys();

    public List<Currency> getAllCurrency();

    public BigDecimal convert2USD(BigDecimal amaount, int currency);

    /**
     * 根据简称获取币种对象
     *
     * @param code
     * @return
     */
    public Currency getCurrencyByCode(String code);

    public Currency getCurrency(int id);

    /**
     * 根据简称获取国家对象
     *
     * @param code
     * @return
     */
    public Country getCountryByCode(String code);

    /**
     * 法国邮编转省
     *
     * @param Postcode
     * @return
     */
    public String getFranceRegionByPostcode(String Postcode);

    public List<SpecialPhonetic> getSpecialPhonetics();

    /**
     * 获取跟单员
     *
     * @param merchandiserId
     * @return
     */
    public Merchandiser getMerchandiserById(int merchandiserId);

    public Merchandiser getMerchandiserByCode(String userCode);

    /**
     * cms用户信息（跟单员表）
     *
     * @param userCode
     * @return
     */
    public Merchandiser newCmsUserInfo(String userCode);

    /********************************* CMS ***************************************/

    /**
     * 根据系统用户id获取跟单员
     *
     * @param userId
     * @return
     */
    public Merchandiser getMerchandiserbyUserId(int userId);

    /**
     * 根据cms用户id获取系统用户
     *
     * @param cmsUserId
     * @return
     */
    public User getUserByCMSUserId(int cmsUserId);

    /**
     * 用户和跟单员是否是同一个人
     *
     * @param merchandiserId
     * @param userId
     * @return
     */
    public boolean isTheSamePerson(int merchandiserId, int userId);

    public String convertToDmsDepartment(int orderSource);

    public AccountSetting getAccountSetting(int orderSource);

    public int getCMSBussisType(int shopSource);

    /**
     * 获取货运方式配置的报关百分比限额
     *
     * @param shippingMethod
     * @return
     */
    public SettingReimbursePercent getCacheSettingReimbursePercentByShippingMethod(int shippingMethod);

    public List<SettingReimbursePercent> getSettingReimbursePercents();

    /**
     * 获取ebay国家简称
     *
     * @param country
     * @return
     */
    public String getEbayCountryCode(String country);

    /**************************ebay*************************************/
    public EbayApiAccount getEbayApiAccount(int shopId);

    public String getEbayShippingMethod(int shippingMethod);

    /**************************ebay*************************************/

    /**************************smt*************************************/
    public AliexpressConfigInfo getAliexpressConfigInfo(int shopId);

    public String getSmtShippingMethod(int shippingMethod);

    /**
     * 获取快过期的账号
     *
     * @return
     */
    List<ShopDevInfo> getAllShopExpiredTokens();

    /**************************shop type*************************************/
    List<ShopType> getShopTypes();

    List<OrderSource> getOrderSource(int shopType);

    /**************************shop type*************************************/
    public void initialize();

    /**
     * @author wanghw
     * @Date 2015-3-26
     * @Description 商品操作日志类型
     */
    public enum LogType {
        /**
         * 增加网店销售商品
         */
        ADD_PRODUCT,

        /**
         * 删除网店销售商品
         */
        DELETE_PRODUCT,

        /**
         * 更新商品安全库存
         */
        UPDATE_SAFETY_STOCK,

        /**
         * 归并商品
         */
        MERGE_PRODUCT_RELATION,

        /**
         * 设置主商品
         */
        SET_MAIN_PRODUCT,
        /**
         * 导出商品图片
         */
        EXPORT_PICTURE,
        /**
         * 更新商品图片
         */
        UPDATE_PICTURE,
        /**
         * 增加am店铺销售商品
         */
        ADD_AM_SHOP_PRODUCT,
        /**
         * 删除am店铺销售商品
         */
        DELETE_AM_SHOP_PRODUCT,
        /**
         * 上架
         */
        SHOP_PRODUCT_PUTWAY,
        /**
         * 下架
         */
        SHOP_PRODUCT_OFF

    }

    public enum Language {
        Amazon_en, // 英语模板
        Amazon_de, // 德语模板
        Amazon_fr, // 法语模板
        Amazon_ru, // //俄语模板，暂时没有
        Amazon_es, // 西班牙语模板
        Amazon_jp, // //日语模板，暂时没有
        Amazon_it // 意大利语模板
    }

    public enum UploadType {
        /**
         * 商品
         */
        PRODUCT,
        /**
         * 订单
         */
        ORDER
    }
}
