package com.itecheasy.core.fba.AgedItemReportCalculateUtil;

import com.itecheasy.core.fba.dao.AmazonInventoryAgedReportDao;
import com.itecheasy.core.po.AmazonInventoryAgedReportPO;

import java.util.List;

/**
 *
 */
public class IsRequireClearanceAgedItemFilterComponent implements CountAgedItemReportComponent {

    private AmazonInventoryAgedReportDao amazonInventoryAgedReportDao;

    //库龄历史表

    private String shopId;


    public IsRequireClearanceAgedItemFilterComponent() {
    }

    private CountAgedItemReportComponent countAgedItemReportComponent;

    public void setAmazonInventoryAgedReportDao(AmazonInventoryAgedReportDao amazonInventoryAgedReportDao) {
        this.amazonInventoryAgedReportDao = amazonInventoryAgedReportDao;
    }

    public IsRequireClearanceAgedItemFilterComponent(CountAgedItemReportComponent component) {
        this.countAgedItemReportComponent = component;
    }

    public IsRequireClearanceAgedItemFilterComponent(CountAgedItemReportComponent component,String shopId) {
        this.countAgedItemReportComponent = component;
    }

    /**
     * 判断是否需要清仓   不同的条件不同的方法
     *  step5
     * @param items
     * @return
     */
    @Override
    public List<AmazonInventoryAgedReportPO> cost(List<AmazonInventoryAgedReportPO> items) {
        //自己的逻辑   计算完成之后继续委托

        for (AmazonInventoryAgedReportPO item : items) {
            /**
             * 有两种情况：
             * 一：同时满足下面两个条件的商品，需清仓
             * 1. 存在180>库龄>90
             * 2. 终止日期 小于 预计库存清0日期
             * 二：仅存在库龄大于180天
             * 1 .给SKU打上清仓标签。
             * 1.	起始日期，终止日期，下一清算点空着。
             * （为了知道新加入大于90天库龄的商品，起始日期是多少。才这么考虑）
             * 2.	预计库存清0日期 正常计算。参照下下讲解
             *  （日期比较远，一看就卖不完）
             */

//            if (){
//
//            }
        }

        //dao的保存操作

//        返回的就是余下的
        return this.countAgedItemReportComponent.cost(items);
    }
}
