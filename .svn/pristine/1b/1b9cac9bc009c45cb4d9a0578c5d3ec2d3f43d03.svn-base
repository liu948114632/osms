/*
 * Copyright (c) 2018. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.
 * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.
 * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.
 * Vestibulum commodo. Ut rhoncus gravida arcu.
 */

package com.itecheasy.core.task;

import com.itecheasy.core.fba.AmazonReportService;
import com.itecheasy.core.system.Shop;
import com.itecheasy.core.system.SystemService;
import com.itecheasy.core.util.StaticUtils;
import org.apache.log4j.Logger;

import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

/**
 * @Auther: liteng
 * @Date: 2018/8/10 16:00
 * @Description:
 */
public class SyncAmazonAgedItemReportTaskImpl implements SyncAmazonAgedItemReportTask {

    private static Logger logger = Logger.getLogger(SyncAmozonStackReportTaskImpl.class.getName());

    private SystemService systemService;

    private AmazonReportService amazonReportService;

    //用于多线程访问的shopList,当enableShops中没有了元素，今天就不会再跑了
    private List<Shop> enableShops = new ArrayList<Shop>();

    public void setSystemService(SystemService systemService) {
        this.systemService = systemService;
    }

    public void setAmazonReportService(AmazonReportService amazonReportService) {
        this.amazonReportService = amazonReportService;
    }


    public void syncAmazonAgedItemReportThreadRipper() {



    }

    //每10秒执行一次 支持并发
    @Override
    public void syncAmazonAgedItemReport() {
        String reportType = "_GET_FBA_INVENTORY_AGED_DATA_";
        logger.info("开始调用中间服务来获取亚马逊商品库龄报告");

        //访问亚马逊 全部
        if (enableShops != null && enableShops.size() > 0) {
            Shop enableShop = enableShops.get(0);
            enableShops.remove(0);

            try {
                logger.error("以下店铺将开始请求亚马逊" + enableShop.getId());
                boolean isSuccess = amazonReportService.syncAmazonAgedItemReport(enableShop, reportType);

                if (isSuccess) {
                    StaticUtils.addEmail("OSMS系统:同步amazon_aged报告成功", "\r\n" + "shopId：" + enableShop.getId());
                } else {
                    StaticUtils.addEmail("OSMS系统:同步amazon_aged报告出错", "\r\n" + "shopId：" + enableShop.getId());
                }

                logger.error("以下店铺请求亚马逊获取报告完成" + enableShop.getId());

                if (enableShops.size() == 0) {
                    logger.info("完成所有的店铺调用中间服务获取亚马逊商品库龄报告");
                }
            } catch (ParseException e) {
                logger.error("date convert error 时间转换错误,请在配置文件deploy_config.properties中重新配置正确的时间格式 “yyyy-MM-dd HH:mm:ss” ");
                logger.error(e.getMessage(), e);
            } catch (IOException e) {
                logger.error("json 格式转换错误");
                logger.error(e.getMessage(), e);
            } catch (Exception e) {
                logger.error(e.getMessage(), e);
            }
        }
    }


    //reload shops
    public void resetEverydaySync() {
        if ( enableShops.size() == 0) {
            logger.info("初始化---------------------开始获取今天新的亚马逊商品库龄报告的店铺");
            enableShops = systemService.getSyncAgedShops();
        }
    }


}
