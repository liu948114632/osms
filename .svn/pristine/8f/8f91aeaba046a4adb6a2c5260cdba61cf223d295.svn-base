/*
 * Copyright (c) 2018. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.
 * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.
 * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.
 * Vestibulum commodo. Ut rhoncus gravida arcu.
 */

package com.itecheasy.core.fba.AgedItemReportCalculateUtil;

import com.itecheasy.common.util.DateUtils;
import com.itecheasy.core.po.AmazonInventoryAgedReportPO;

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

/**
 * @Auther: liteng
 * @Date: 2018/8/13 10:28
 * @Description: 亚马逊库龄报告表的各类计算
 */
public class CalculateContentUtils {

    public static void main(String[] args) {
        Calendar cal = Calendar.getInstance();
    //下面的就是把当前日期加一个月
        cal.add(Calendar.MONTH, 3);
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        System.out.println("today is:" + format.format(Calendar.getInstance().getTime()));
        System.out.println("yesterday is:" + format.format(cal.getTime()));
    }


    /**
     * 计算起始日期
     * @param pos
     * @return
     */
    public static List<AmazonInventoryAgedReportPO> calculateStartDate(List<AmazonInventoryAgedReportPO> pos) {
        Date date = new Date();
           for (AmazonInventoryAgedReportPO directnessToDataBaseItem : pos) {
               if (directnessToDataBaseItem.getInvAge91To180Days()!=null) {
               int compareTo = directnessToDataBaseItem.getInvAge91To180Days().compareTo(new BigDecimal(0));
               if (compareTo > 0) {
                   //90天到180天 有 库存的情况
                   directnessToDataBaseItem.setStartDate(date);    //设置起始时间
               } else {
                   //90天到180天 没有 库存的情况 小于等于zero
                   directnessToDataBaseItem.setStartDate(date);    //设置起始时间
               }
           }
       }
        return pos;
    }

    /**
     * 下一清算点
     * @param pos
     * @return
     */
    public static List<AmazonInventoryAgedReportPO> calculateNextClearPoint(List<AmazonInventoryAgedReportPO> pos) {
        for (AmazonInventoryAgedReportPO po : pos) {
            if (po.getStartDate()!=null) {
                Date startDateAdd90 = org.apache.commons.lang.time.DateUtils.addDays(po.getStartDate(), 90);
                Date dayOfMonth = DateUtils.getDayOfMonth(startDateAdd90);   //获取这个月的第15天

                int compareToDate = startDateAdd90.compareTo(dayOfMonth);
                if (compareToDate > 0) {   //起始日期大于15
                    Date date = org.apache.commons.lang.time.DateUtils.addMonths(startDateAdd90, 1);
                    po.setNextClearingPoint(date);
                } else if (compareToDate <= 0) {//起始日期小于等于15
//                    Date date = org.apache.commons.lang.time.DateUtils.addMonths(startDateAdd90, 1);
                    po.setNextClearingPoint(dayOfMonth);
                }
            }
        }
        return pos;
    }

    /**
     * 终止日期计算
     *
     * @param pos
     * @return
     */
    public static List<AmazonInventoryAgedReportPO> calculateTerminationDate(List<AmazonInventoryAgedReportPO> pos) {
        for (AmazonInventoryAgedReportPO po : pos) {
            if (po.getNextClearingPoint()!=null) {
                Date terminationDate = org.apache.commons.lang.time.DateUtils.addDays(po.getNextClearingPoint(), -8);
                po.setTerminationDate(terminationDate);
            }
        }
        return pos;
    }

    /**
     * SyncFirst 需要
     * 预计库存清零日期
     * 1.值=当前日期+可售库存/30天销量*30（进1法）
     * 2.如果30天销量为0，则set为2050-1-1（日期比较远，一看就卖不完）
     */
    public static List<AmazonInventoryAgedReportPO> calculatePlanStockToZeroDate(List<AmazonInventoryAgedReportPO> pos) {
        for (AmazonInventoryAgedReportPO po : pos) {
            if (po.getUnitsShippedLast30Days() != null) {
                int compareTo = po.getUnitsShippedLast30Days().compareTo(new BigDecimal(0));
                if (compareTo <= 0) {
                    //月销量小于等于零
                    Date parse = DateUtils.getRemoteFuture();
                    po.setPlanStockToZeroDate(parse);
                } else {
                    BigDecimal multiply = po.getAvaliableQuantitySellable().multiply(new BigDecimal(30)).
                            divide(po.getUnitsShippedLast30Days(), 0, BigDecimal.ROUND_CEILING);
                    Date date = org.apache.commons.lang.time.DateUtils.addDays(po.getSyncFirst(), multiply.intValue());
                    po.setPlanStockToZeroDate(date);
                }
            }
        }
        return pos;
    }

    /**
     * 前提 无
     * 售完时间
     *
     * @param pos
     * @return
     */
    public static List<AmazonInventoryAgedReportPO> calculateSellOutDate(List<AmazonInventoryAgedReportPO> pos) {

        for (AmazonInventoryAgedReportPO po : pos) {
            if (po.getUnitsShippedLast30Days() != null) {
                /**
                 * 1.	意思是，还需要用多少天才能卖完
                 * 2.	值=（可用库存/30天销量）*30（小数）
                 * 3.	如果30天销量为0，则取值99999
                 */
                int compareTo = po.getUnitsShippedLast30Days().compareTo(new BigDecimal(0));
                if (compareTo <= 0) {
                    po.setSellOutDate(new BigDecimal(0));
                } else {
                    BigDecimal howDaySellout = po.getAvaliableQuantitySellable().multiply(new BigDecimal(30).
                            divide(po.getUnitsShippedLast30Days(), 0, BigDecimal.ROUND_CEILING));
                    po.setSellOutDate(howDaySellout);
                }
            }
        }
        return pos;
    }

    /**
     * 售完状态
     * 1.	终止日期=<预计库存清0日期，则无法售完
     * 2.	终止日期>预计库存清0日期，则可以售完
     */
    public static List<AmazonInventoryAgedReportPO> calculateSellOutStatus(List<AmazonInventoryAgedReportPO> pos) {
        for (AmazonInventoryAgedReportPO po : pos) {
            if (po.getTerminationDate() != null && po.getPlanStockToZeroDate()!=null) {
                int i = po.getTerminationDate().compareTo(po.getPlanStockToZeroDate());
                if (i > 0) {
                    po.setSellOutStatus(1); //可以售完
                } else if (i <= 0) {
                    po.setSellOutStatus(0); //无法售完
                }
            }
        }
        return pos;
    }

}
