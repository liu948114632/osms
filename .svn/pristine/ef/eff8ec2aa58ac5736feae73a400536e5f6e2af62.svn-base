package com.itecheasy.core.po;

import javax.persistence.*;
import java.sql.Timestamp;

/**
 * @Auther: liteng
 * @Date: 2018/7/2 17:05
 * @Description:
 */
@Entity
@Table(name = "amazon_stack_report", schema = "dbo", catalog = "Develop_OSMS")
public class AmazonStackReportPO {
    private int id;
    private Integer shopId;
    private Timestamp syncFirst;
    private Timestamp syncLast;
    private String sku;
    private Integer afnFulfillableQuantity;
    private Integer afnReservedQuantity;
    private Integer afnUnsellableQuantity;
    private Integer afnInboundWorkingQuantity;
    private Integer afnInboundShippedQuantity;
    private Integer afnInboundReceivingQuantity;
    private Integer afnTotalQuantity;
    private Integer afnWarehouseQuantity;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", nullable = false)
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Basic
    @Column(name = "shopId", nullable = true)
    public Integer getShopId() {
        return shopId;
    }

    public void setShopId(Integer shopId) {
        this.shopId = shopId;
    }

    @Basic
    @Column(name = "sync_first", nullable = true)
    public Timestamp getSyncFirst() {
        return syncFirst;
    }

    public void setSyncFirst(Timestamp syncFirst) {
        this.syncFirst = syncFirst;
    }

    @Basic
    @Column(name = "sync_last", nullable = true)
    public Timestamp getSyncLast() {
        return syncLast;
    }

    public void setSyncLast(Timestamp syncLast) {
        this.syncLast = syncLast;
    }

    @Basic
    @Column(name = "sku", nullable = true, length = 100)
    public String getSku() {
        return sku;
    }

    public void setSku(String sku) {
        this.sku = sku;
    }

    @Basic
    @Column(name = "afn_fulfillable_quantity", nullable = true)
    public Integer getAfnFulfillableQuantity() {
        return afnFulfillableQuantity;
    }

    public void setAfnFulfillableQuantity(Integer afnFulfillableQuantity) {
        this.afnFulfillableQuantity = afnFulfillableQuantity;
    }

    @Basic
    @Column(name = "afn_reserved_quantity", nullable = true)
    public Integer getAfnReservedQuantity() {
        return afnReservedQuantity;
    }

    public void setAfnReservedQuantity(Integer afnReservedQuantity) {
        this.afnReservedQuantity = afnReservedQuantity;
    }

    @Basic
    @Column(name = "afn_unsellable_quantity", nullable = true)
    public Integer getAfnUnsellableQuantity() {
        return afnUnsellableQuantity;
    }

    public void setAfnUnsellableQuantity(Integer afnUnsellableQuantity) {
        this.afnUnsellableQuantity = afnUnsellableQuantity;
    }

    @Basic
    @Column(name = "afn_inbound_working_quantity", nullable = true)
    public Integer getAfnInboundWorkingQuantity() {
        return afnInboundWorkingQuantity;
    }

    public void setAfnInboundWorkingQuantity(Integer afnInboundWorkingQuantity) {
        this.afnInboundWorkingQuantity = afnInboundWorkingQuantity;
    }

    @Basic
    @Column(name = "afn_inbound_shipped_quantity", nullable = true)
    public Integer getAfnInboundShippedQuantity() {
        return afnInboundShippedQuantity;
    }

    public void setAfnInboundShippedQuantity(Integer afnInboundShippedQuantity) {
        this.afnInboundShippedQuantity = afnInboundShippedQuantity;
    }

    @Basic
    @Column(name = "afn_inbound_receiving_quantity", nullable = true)
    public Integer getAfnInboundReceivingQuantity() {
        return afnInboundReceivingQuantity;
    }

    public void setAfnInboundReceivingQuantity(Integer afnInboundReceivingQuantity) {
        this.afnInboundReceivingQuantity = afnInboundReceivingQuantity;
    }

    @Basic
    @Column(name = "afn_total_quantity", nullable = true)
    public Integer getAfnTotalQuantity() {
        return afnTotalQuantity;
    }

    public void setAfnTotalQuantity(Integer afnTotalQuantity) {
        this.afnTotalQuantity = afnTotalQuantity;
    }

    @Basic
    @Column(name = "afn_warehouse_quantity", nullable = true)
    public Integer getAfnWarehouseQuantity() {
        return afnWarehouseQuantity;
    }

    public void setAfnWarehouseQuantity(Integer afnWarehouseQuantity) {
        this.afnWarehouseQuantity = afnWarehouseQuantity;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        AmazonStackReportPO that = (AmazonStackReportPO) o;

        if (id != that.id) return false;
        if (shopId != null ? !shopId.equals(that.shopId) : that.shopId != null) return false;
        if (syncFirst != null ? !syncFirst.equals(that.syncFirst) : that.syncFirst != null) return false;
        if (syncLast != null ? !syncLast.equals(that.syncLast) : that.syncLast != null) return false;
        if (sku != null ? !sku.equals(that.sku) : that.sku != null) return false;
        if (afnFulfillableQuantity != null ? !afnFulfillableQuantity.equals(that.afnFulfillableQuantity) : that.afnFulfillableQuantity != null)
            return false;
        if (afnReservedQuantity != null ? !afnReservedQuantity.equals(that.afnReservedQuantity) : that.afnReservedQuantity != null)
            return false;
        if (afnUnsellableQuantity != null ? !afnUnsellableQuantity.equals(that.afnUnsellableQuantity) : that.afnUnsellableQuantity != null)
            return false;
        if (afnInboundWorkingQuantity != null ? !afnInboundWorkingQuantity.equals(that.afnInboundWorkingQuantity) : that.afnInboundWorkingQuantity != null)
            return false;
        if (afnInboundShippedQuantity != null ? !afnInboundShippedQuantity.equals(that.afnInboundShippedQuantity) : that.afnInboundShippedQuantity != null)
            return false;
        if (afnInboundReceivingQuantity != null ? !afnInboundReceivingQuantity.equals(that.afnInboundReceivingQuantity) : that.afnInboundReceivingQuantity != null)
            return false;
        if (afnTotalQuantity != null ? !afnTotalQuantity.equals(that.afnTotalQuantity) : that.afnTotalQuantity != null)
            return false;
        if (afnWarehouseQuantity != null ? !afnWarehouseQuantity.equals(that.afnWarehouseQuantity) : that.afnWarehouseQuantity != null)
            return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = id;
        result = 31 * result + (shopId != null ? shopId.hashCode() : 0);
        result = 31 * result + (syncFirst != null ? syncFirst.hashCode() : 0);
        result = 31 * result + (syncLast != null ? syncLast.hashCode() : 0);
        result = 31 * result + (sku != null ? sku.hashCode() : 0);
        result = 31 * result + (afnFulfillableQuantity != null ? afnFulfillableQuantity.hashCode() : 0);
        result = 31 * result + (afnReservedQuantity != null ? afnReservedQuantity.hashCode() : 0);
        result = 31 * result + (afnUnsellableQuantity != null ? afnUnsellableQuantity.hashCode() : 0);
        result = 31 * result + (afnInboundWorkingQuantity != null ? afnInboundWorkingQuantity.hashCode() : 0);
        result = 31 * result + (afnInboundShippedQuantity != null ? afnInboundShippedQuantity.hashCode() : 0);
        result = 31 * result + (afnInboundReceivingQuantity != null ? afnInboundReceivingQuantity.hashCode() : 0);
        result = 31 * result + (afnTotalQuantity != null ? afnTotalQuantity.hashCode() : 0);
        result = 31 * result + (afnWarehouseQuantity != null ? afnWarehouseQuantity.hashCode() : 0);
        return result;
    }
}
