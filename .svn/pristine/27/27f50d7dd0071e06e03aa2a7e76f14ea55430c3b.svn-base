package com.itecheasy.webservice.crm;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * ForOtherWebService service = new ForOtherWebService();
 * ForOtherWebServiceSoap portType = service.getForOtherWebServiceSoap();
 * portType.isOrderLimitModifyByProductId(...);
 * </pre>
 * 
 * </p>
 * 
 */
@WebServiceClient(name = "ForOtherWebService", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://192.168.118.15/WebServiceCRM/ForOtherWebService.asmx?wsdl")
public class ForOtherWebService extends Service {

	private final static URL FOROTHERWEBSERVICE_WSDL_LOCATION;
	private final static Logger logger = Logger.getLogger(com.itecheasy.webservice.crm.ForOtherWebService.class
			.getName());

	static {
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = com.itecheasy.webservice.crm.ForOtherWebService.class.getResource(".");
			url = new URL(baseUrl, "http://192.168.118.15/WebServiceCRM/ForOtherWebService.asmx?wsdl");
		} catch (MalformedURLException e) {
			logger.warning("Failed to create URL for the wsdl Location: 'http://192.168.118.15/WebServiceCRM/ForOtherWebService.asmx?wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		}
		FOROTHERWEBSERVICE_WSDL_LOCATION = url;
	}

	public ForOtherWebService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public ForOtherWebService() {
		super(FOROTHERWEBSERVICE_WSDL_LOCATION, new QName("http://tempuri.org/", "ForOtherWebService"));
	}

	/**
	 * 
	 * @return returns ForOtherWebServiceSoap
	 */
	@WebEndpoint(name = "ForOtherWebServiceSoap")
	public ForOtherWebServiceSoap getForOtherWebServiceSoap() {
		return super.getPort(new QName("http://tempuri.org/", "ForOtherWebServiceSoap"), ForOtherWebServiceSoap.class);
	}

	/**
	 * 
	 * @return returns ForOtherWebServiceSoap
	 */
	@WebEndpoint(name = "ForOtherWebServiceSoap12")
	public ForOtherWebServiceSoap getForOtherWebServiceSoap12() {
		return super
				.getPort(new QName("http://tempuri.org/", "ForOtherWebServiceSoap12"), ForOtherWebServiceSoap.class);
	}

}
