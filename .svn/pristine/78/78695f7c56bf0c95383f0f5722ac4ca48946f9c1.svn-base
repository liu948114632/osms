package com.itecheasy.core.prepare.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.springframework.orm.hibernate3.HibernateCallback;

import com.itecheasy.common.BaseDAOImpl;
import com.itecheasy.core.po.SeaTransportationPreparePlanPO;
import com.itecheasy.core.prepare.PreparePlanProductVO;

/**
 * @author taozihao
 * @date 2018年7月4日 上午8:51:32
 * @description
 */
public class SeaTransportationPreparePlanDaoImpl extends BaseDAOImpl<SeaTransportationPreparePlanPO, Integer> implements SeaTransportationPreparePlanDao {

	@Override
	public List<PreparePlanProductVO> getAllProductInfo(int shopId) {
		final ArrayList<PreparePlanProductVO> list = new ArrayList<PreparePlanProductVO>();
		final StringBuffer buffer = new StringBuffer("SELECT f.id,s.primary_picture_code,s.unit_weight,f.sku,f.has_sea_transported,f.month_sales ,a.afn_total_quantity ");
		buffer.append("FROM dbo.fba_shop_product f  ");
		buffer.append("INNER JOIN shop_product_cms_info s  ");
		buffer.append("ON f.cms_product_id=s.cms_product_id ");
		//buffer.append("AND f.has_sea_transported = 1 ");
		buffer.append("AND f.is_sea_transportation_blacklist=0 ");
		buffer.append("AND f.shop_id ="+shopId);
		buffer.append(" LEFT JOIN dbo.amazon_stock_report a  ");
		buffer.append("ON f.shop_id = a.shopId ");
		buffer.append("AND f.sku = a.sku ");
		
		this.getHibernateTemplate().execute(new HibernateCallback() {
			
			@Override
			public Object doInHibernate(Session session) throws HibernateException, SQLException {
				@SuppressWarnings("deprecation")
				Connection connection = session.connection();
				PreparedStatement ps = connection.prepareStatement(buffer.toString());
				ResultSet rs = ps.executeQuery();
				while(rs.next()){
					PreparePlanProductVO vo = new PreparePlanProductVO();
					//s.primary_picture_code,s.unit_weight,f.sku,f.has_sea_transported,f.month_sales
					vo.setFbaShopProductId(rs.getInt("id"));
					vo.setPrimaryPictureCode(rs.getString("primary_picture_code"));
					vo.setUnitWeight(rs.getDouble("unit_weight"));
					vo.setMonthSales(rs.getInt("month_sales"));
					vo.setSku(rs.getString("sku"));
					vo.setHasSeaTransported(rs.getInt("has_sea_transported"));
					vo.setAfnTotalQuantity(rs.getInt("afn_total_quantity"));
					list.add(vo);
				}
				return list;
			}
		});
		return list;
	}

}
