package com.itecheasy.core.report;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.apache.commons.lang.StringUtils;

import com.itecheasy.common.util.BeanUtils;
import com.itecheasy.common.util.DateUtils;
import com.itecheasy.common.util.DeployProperties;
import com.itecheasy.core.po.ReportAutotaskRecordPO;
import com.itecheasy.core.report.dao.ReportAutotaskRecordDao;
import com.itecheasy.core.report.dao.ReportAutotaskShopConfigDao;
import com.itecheasy.core.system.Shop;
import com.itecheasy.core.system.SystemService;
import com.itecheasy.webservice.amazon.ReportConfigVO;
import com.itecheasy.webservice.amazon.ReportVO;
import com.itecheasy.webservice.client.AmazonClient;

/**
 * @author taozihao
 * @date 2018年9月5日 上午10:08:02
 * @description
 */
public class AmazonReportTaskServiceImpl implements AmazonReportTaskService {
	
	/**
	 * 下载的亚马逊报告临时存放队列目录
	 */
	public static final String REPORT_FILE_QUEUE_PATH = DeployProperties.getInstance().getProperty("amazon.report.queuePath", "C:\\osms_report\\");
	
	public static final String SEPARATOR = "_N_";
	
	private ReportAutotaskRecordDao reportAutotaskRecordDao;
	private ReportAutotaskShopConfigDao reportAutotaskShopConfigDao;
	private SystemService systemService;

	public void setReportAutotaskRecordDao(ReportAutotaskRecordDao reportAutotaskRecordDao) {
		this.reportAutotaskRecordDao = reportAutotaskRecordDao;
	}

	public void setReportAutotaskShopConfigDao(ReportAutotaskShopConfigDao reportAutotaskShopConfigDao) {
		this.reportAutotaskShopConfigDao = reportAutotaskShopConfigDao;
	}

	public void setSystemService(SystemService systemService) {
		this.systemService = systemService;
	}

	@Override
	public List<ReportAutotaskShopConfigVO> getReportAutotaskShopConfigList() {
		return BeanUtils.copyList(reportAutotaskShopConfigDao.getAll(), ReportAutotaskShopConfigVO.class);
	}

	@Override
	public List<ReportAutotaskRecordVO> getReportAutotaskRecordList() {
		List<ReportAutotaskRecordPO> list = reportAutotaskRecordDao.findListByHql("FROM ReportAutotaskRecordPO WHERE status<>? AND failedTimes<3 ORDER BY id",new Object[]{ReportTaskStatus.DONE.getVal()});
		return BeanUtils.copyList(list, ReportAutotaskRecordVO.class);
	}

	@Override
	public void addReportAutotaskRecord(ReportAutotaskRecordVO reportAutotaskRecordVO) {
		reportAutotaskRecordDao.addObject(BeanUtils.copyProperties(reportAutotaskRecordVO, ReportAutotaskRecordPO.class, new String[]{"id"} ));
	}

	@Override
	public void downloadReportFromAmazon(int reportRecordId) {
		ReportAutotaskRecordPO recordPO = reportAutotaskRecordDao.getObject(reportRecordId);
		Date now = new Date();
		recordPO.setLastFireTime(new Date());
		try{
			ReportConfigVO reportConfig = new ReportConfigVO();
			reportConfig.setStartDate(DateUtils.getXMLGregorianCalendar(org.apache.commons.lang.time.DateUtils.addDays(now, -recordPO.getLimitDays())));
			reportConfig.setEndDate(DateUtils.getXMLGregorianCalendar(now));
			reportConfig.setReportType(recordPO.getReportType());
			reportConfig.setMaxWaitingSeconds(300);
			//ReportVO amazonReport = AmazonClient.getAmazonReport(recordPO.getShopId(), reportConfig);
			Thread.sleep(12000);
			ReportVO amazonReport = new ReportVO();
			amazonReport.setFile(FileUtils.readFileToByteArray(new File("C:\\_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_1536213331065.txt")));
			amazonReport.setMessage("_DONE_");
			
			if(amazonReport.getFile()!=null){
				//注意文件格式
				Shop shop = systemService.getShop(recordPO.getShopId());
				File file = new File(REPORT_FILE_QUEUE_PATH + shop.getName() +SEPARATOR+ shop.getId() +SEPARATOR+ recordPO.getReportType() +SEPARATOR+ DateUtils.getTimeStampString(now) +".txt");
				FileUtils.touch(file);
				FileUtils.writeByteArrayToFile(file, amazonReport.getFile());
			}
			if(StringUtils.isEmpty(recordPO.getNote())){
				recordPO.setNote(amazonReport.getMessage());
			}else{
				recordPO.setNote(recordPO.getNote()+";"+amazonReport.getMessage());
			}
			
			if(amazonReport.getMessage().equalsIgnoreCase("_CANCELLED_")){
				recordPO.setStatus(ReportTaskStatus.ERROR.getVal());
				recordPO.setFailedTimes(recordPO.getFailedTimes()+1);
			}else{
				recordPO.setStatus(ReportTaskStatus.DONE.getVal());
			}
			
		}catch(Exception e){
			e.printStackTrace();
			recordPO.setStatus(ReportTaskStatus.ERROR.getVal());
			recordPO.setFailedTimes(recordPO.getFailedTimes()+1);
			if(StringUtils.isEmpty(recordPO.getNote())){
				recordPO.setNote(e.getMessage());
			}else{
				recordPO.setNote(recordPO+";"+e.getMessage());
			}
		}
		reportAutotaskRecordDao.updateObject(recordPO);
		int rs = reportAutotaskShopConfigDao.updateLastFireTime(recordPO.getLastFireTime(), recordPO.getShopId(), recordPO.getReportType());
		System.out.println(rs);
	}
	
	public static void main(String[] args) throws IOException {
		FileUtils.touch(new File(REPORT_FILE_QUEUE_PATH + "aaa.txt"));
	}

}
